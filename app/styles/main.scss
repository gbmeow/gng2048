$icon-font-path: "../bower_components/bootstrap-sass-official/assets/fonts/bootstrap/";
// bower:scss
@import "bootstrap-sass-official/assets/stylesheets/_bootstrap.scss";
// endbower

.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

body {
  padding: 0;
}

/* Everything but the jumbotron gets side spacing for mobile first views */
.header,
.marketing,
.footer {
  padding-left: 15px;
  padding-right: 15px;
}

/* Custom page header */
.header {
  border-bottom: 1px solid #e5e5e5;
  margin-bottom: 10px;

  /* Make the masthead heading the same height as the navigation */
  h3 {
    margin-top: 0;
    margin-bottom: 0;
    line-height: 40px;
    padding-bottom: 19px;
  }
}

/* Custom page footer */
.footer {
  padding-top: 19px;
  color: #777;
  border-top: 1px solid #e5e5e5;
}

.container-narrow > hr {
  margin: 30px 0;
}

/* Main marketing message and sign up button */
.jumbotron {
  text-align: center;
  border-bottom: 1px solid #e5e5e5;

  .btn {
    font-size: 21px;
    padding: 14px 24px;
  }
}

/* Supporting marketing content */
.marketing {
  margin: 40px 0;

  p + h4 {
    margin-top: 28px;
  }
}

/* Responsive: Portrait tablets and up */
@media screen and (min-width: 768px) {
  .container {
    max-width: 730px;
  }

  /* Remove the padding we set earlier */
  .header,
  .marketing,
  .footer {
    padding-left: 0;
    padding-right: 0;
  }
  /* Space out the masthead */
  .header {
    margin-bottom: 30px;
  }
  /* Remove the bottom border on the jumbotron for visual effect */
  .jumbotron {
    border-bottom: 0;
  }
}

$width: 400px;          // The width of the whole board
$tile-count: 4;         // The number of tiles per row/column
$tile-padding: 15px;    // The padding between tiles

$tile-size: ($width - $tile-padding * ($tile-count + 1)) / $tile-count;



.grid {
  position: relative;
  width: $width;
  height: $width;
  background: orangered;
}


@mixin transform($value...) {
  -webkit-transform: $value;
  -moz-transform: $value;
  -o-transform: $value;
  transform: $value;
}

.grid-container {
  position: absolute;   // the grid is absolutely positioned
  z-index: 1;
  width: $width;
  margin: 0 auto;       // center

  .grid-cell {
    width: $tile-size;              // set the cell width
    height: $tile-size;             // set the cell height
    margin-bottom: $tile-padding;   // the padding between lower cells
    margin-right: $tile-padding;    // the padding between the right cell
    position: absolute;
    border: 2px solid blanchedalmond;

    @for $x from 1 through $tile-count {
      @for $y from 1 through $tile-count {
        $zeroOffsetX: $x - 1;
        $zeroOffsetY: $y - 1;
        $newX: ($tile-size) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
        $newY: ($tile-size) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);

        &.position-#{$zeroOffsetX}-#{$zeroOffsetY} {
          @include transform(translate($newX, $newY));
        }
      }
    }

  }
}


.tile-container {
  position: absolute;
  z-index: 2;

  .tile {
    width: $tile-size;        // tile width
    height: $tile-size;       // tile height
    background: brown;
    position: absolute;

    @for $x from 1 through $tile-count {
      @for $y from 1 through $tile-count {
        $zeroOffsetX: $x - 1;
        $zeroOffsetY: $y - 1;
        $newX: ($tile-size) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
        $newY: ($tile-size) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);

        &.position-#{$zeroOffsetX}-#{$zeroOffsetY} {
          @include transform(translate($newX, $newY));
        }
      }
    }

  }
}

//.tile {
//  width: 90px;
//  float: left;
//  height: 90px;
//  padding: 5px;
//  border: 2px solid blanchedalmond;
//}
//
//.userPlacedTile {
//  width: 90px;
//  height: 90px;
//  padding: 5px;
//  border: 2px solid cornflowerblue;
//  background: brown;
//}


